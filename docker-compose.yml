# docker-compose 버젼
version: '3.7'

# 컨테이너 목록
services:
  # 컨테이너 이름 변수처럼 직접 고르면 된다.
  database:
    # 컨테이너에 사용할 이미지
    image: mysql:latest
    # 포트 연결 설정
    ports:
      - 3306:3306
    cap_add:
      - SYS_NICE # CAP_SYS_NICE
    # 컨테이너 실행시에 환경변수 사용
    environment:
      MYSQL_PASSWORD: dogdog1234!
      MYSQL_DATABASE: petmily
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: dogdog1234!
    # 재시작하는 조건
    command: # 명령어 실행
      # character-set & collision
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      # Access denied
      - --default-authentication-plugin=mysql_native_password
    restart: on-failure
    volumes:
      # - ./database/init:/docker-entrypoint-initdb.d
      - ./database/conf.d:/etc/mysql/conf.d
    # 네트워크 설정
    networks:
      default:
        ipv4_address: 172.16.2.2

  server:
    # 컨테이너에 사용할 Dockerfile이 있는 경로, image 대신에 쓰면, 없는 경우 이미지를 자동으로 빌드하고 컨테이너를 생성한다.
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules # Remove this if you have pure JS dependencies
    ports:
      - 5000:3000
    links:
      - database
    depends_on:
      - database
    # 기본적으로 써있는 CMD나 ENTRYPOINT에 덮어쓸 내용
    entrypoint: 'yarn start:dev'
    networks:
      default:
        ipv4_address: 172.16.2.3

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.2.0/24
